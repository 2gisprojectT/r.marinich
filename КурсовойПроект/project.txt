Pairwise Testing:
1.
	Парное тестирование - такой метод подготовки данных для тестирования модели системы или продукта, что в результате которого для каждой пары параметров генерируется всевозможные комбинации. В итоге получаем таблицу, в которой в любых двух столбцах имеются всевозможные комбинации этих параметров. 

	Идейно самый общий (N-wise Testing?) метод основан на предположении о наибольшей значимости именно N-комбинаций параметров для тестирования. Поэтому мы проверяем на всевозможные дефекты только комбинации N параметров. В случае N=2 (Pairwise Testing) мы проверяем только пары, а те баги, которые могут проявится в более сложных комбинациях мы считаем маловероятными или просто труднонаходимые в силу наших ограниченных возможностей. Это позволит обнаружить самые легко воспроизводимые ошибки, на которые могут наткнуться пользователи. Приведем пример. Пусть у нас есть 6 параметров по 10 значений в каждом. Если ошибка кроется в сложной комбинации 6 параметров, то наткнется на нее 1 человек, если ли же есть комбинациях из 2 параметров -- 10^4 человек. Таким образом, с помощью Pairwise Testing мы обнаруживаем самые критичные недоработки.
	Приведем еще пример. Определим тройку параметров (OS, браузер, Language). В случае полного перебора имеем 2^3=8, а используя Pairwise Testing получаем всего лишь 4:
	windows		opera	RU
	windows		FF		EN
	Linux		opera	EN
	Linux		FF		RU
	Можно проверить, что в каждой паре столбцов параметры принимают всевозможные значения. 

	Подробнее про фактическую реализацию: самый простой способ - подобрать ортогональную таблицу с конфигурацией  (t; k, n1, .. , nk), где t - глубина покрытия, k - количество параметров, ni - количество значений i-ого параметра.

	Пример:
	Рассмотрим параметры (Пол, Возраст, Дети) со значениями {М, Ж}, {<30, ~30, >30} и {Да, Нет}. Построим всевозможные сочетания 1 и 2 параметров, а затем подберем значения 3 так, чтобы присутствовали всевозможные значения с остальными параметрами:

		М, <30		М, <, Да
		М, ~30		М, ~30, Нет
		M, >30		M, >30, Да
		Ж, <30		Ж, <30, Нет
		Ж, ~30		Ж, ~30, Да
		Ж, >30		Ж, >30, Нет

	Проверим на правильность, воспользовавшись генератором PICT:
	Входные данные для генератора:
		Пол: М, Ж
		Возраст: <30, ~30, >30
		Дети: Да, Нет
	Результат работы:
		Пол	Возраст	Дети
		М	>30		Да
		М	<30		Нет
		Ж	>30		Нет
		Ж	<30		Да
		Ж	~30		Нет
		М	~30		Да

2.
	Метод подходит для продуктов, в процессе тестирования которых неизбежно образуется комбинаторный взрыв. В таких случаях просто необходимо сократить общее количество комбинаций, но также важно и несильно уменьшить область покрытия тестов. Добавлю еще, что следует использовать если необходимо убедиться в корректной работе именно пар значений выборки, которые связаны между друг другом. Если значения выборки не связаны -- лучше считать их независимыми и тестировать независимо. Например, если имеет 20 параметров с 2 значениями -- необходимо всего лишь 2 теста(все параметры имеют первое значение, либо второе).

3.
	Метод недостаточно эффективен, если тестируемая нами модель требует перебора всех пар значений параметров со всеми другими парами значений параметров. Или, если точнее, в существующей модели все параметры каким-то особенным образом сильно связаны друг с другом, что делает полученную выборку конкретных пар без учета других очень узкой, а увеличение значение N только приближает нас к полному перебору, который невозможен.

	Также из за каких-то ограничений выборка может оказаться попросту некорректной. Поясняя последнее: если мы тестируем на выборках (сайт, браузер, ОС), то тройка (2gis.ru, Internet Explorer, Linux) явно неосуществима на практике, что требует дополнительной работы в виде либо поиска достаточного подходящего программного обеспечения, либо программной обработки имеющей таблицы.


=====

	Входные данные для следующего тест-кейса можно получить, например, при помощи программы PICT:

	Показать темы		Упопядочить1		Упопядочить2

	Месяц			НазваниеТемы		Убыванию
	Месяц			ВремяРазмещ			Возрастанию
	День			Автор				Убыванию
	3Месяца			Автор				Возрастанию
	День			ВремяРазмещ			Убыванию
	Неделя			НазваниеТемы		Возрастанию
	6месяцев		НазваниеТемы		Убыванию
	2Недели			ПослСообщ			Возрастанию
	Неделя			ПослСообщ			Убыванию
	6месяцев		Автор				Возрастанию
	Год				Автор				Убыванию
	День			НазваниеТемы		Возрастанию
	День			ПослСообщ			Убыванию
	3Месяца			ПослСообщ			Убыванию
	Год				НазваниеТемы		Возрастанию
	6месяцев		ВремяРазмещ			Убыванию
	2Недели			Автор				Убыванию
	3Месяца			НазваниеТемы		Возрастанию
	Год				ВремяРазмещ			Убыванию
	Неделя			ВремяРазмещ			Возрастанию
	2Недели			НазваниеТемы		Возрастанию
	Месяц			Автор				Убыванию
	3Месяца			ВремяРазмещ			Убыванию
	2Недели			ВремяРазмещ			Убыванию
	Месяц			ПослСообщ			Убыванию
	Год				ПослСообщ			Убыванию
	6месяцев		ПослСообщ			Возрастанию
	Неделя			Автор				Возрастанию

Тест кейс #1: 
Проверка правильного сортировки тем форума

	Предусловия: 
		1) Перейти по ссылке http://nnm-club.me/forum/viewforum.php?f=561

		2) Получить нужную строку параметров для тестирования

	Шаги:
		1) Переносим данные из строки параметров и заполняем параметры на сайте.

		2) Жмем кнопку "Перейти"

		3) Проверяем, правильно ли выстроен результат.

	Ожидаемый результат:

		Элементы отсортированы в нужном порядке.


Аналогично предыдущему:

Интернет	Цифровое ТВ	Телеприставка на Android	Wi-Fi маршрутизатор SNR-CPE-W4N	Кабельное телевидение	Антивирусная защита
25мб	Amedia Premium HD	Покупка	В аренду	Не нажат	PrDrWeb
25мб	КлубHD	Рассрочка на 9 месясев	В рассрочку на 6 месяцев	Нажат	KIV
50мб	Наш Футбол HD	Рассрочка на 4 месяца	За полную стоимость	Нажат	PrDrWeb
100мб	Наш Футбол HD	Покупка	В рассрочку на 6 месяцев	Не нажат	KIS
100мб	Amedia Premium HD	Рассрочка на 4 месяца	В аренду	Нажат	KIS
50мб	Наш Футбол HD	Рассрочка на 9 месясев	За полную стоимость	Не нажат	KIS
50мб	КлубHD	Покупка	За полную стоимость	Не нажат	DrWeb
50мб	КлубHD	Рассрочка на 9 месясев	В аренду	Не нажат	KIS
25мб	Все канали	Рассрочка на 4 месяца	В рассрочку на 6 месяцев	Нажат	DrWeb
50мб	Amedia Premium HD	Покупка	В рассрочку на 6 месяцев	Нажат	KIS
100мб	КлубHD	Рассрочка на 4 месяца	В аренду	Не нажат	KIS
100мб	Все канали	Покупка	За полную стоимость	Не нажат	KIV
100мб	Amedia Premium HD	Рассрочка на 9 месясев	За полную стоимость	Нажат	DrWeb
50мб	Amedia Premium HD	Рассрочка на 4 месяца	В аренду	Не нажат	KIV
100мб	Все канали	Рассрочка на 9 месясев	В рассрочку на 6 месяцев	Не нажат	PrDrWeb
25мб	Наш Футбол HD	Покупка	В аренду	Нажат	DrWeb
25мб	Наш Футбол HD	Рассрочка на 4 месяца	За полную стоимость	Нажат	KIV
100мб	КлубHD	Рассрочка на 9 месясев	За полную стоимость	Не нажат	PrDrWeb
25мб	Все канали	Покупка	За полную стоимость	Не нажат	KIS
50мб	Все канали	Рассрочка на 4 месяца	В аренду	Нажат	KIS
25мб	КлубHD	Рассрочка на 4 месяца	В рассрочку на 6 месяцев	Нажат	KIS

Тест кейс #2: 
Проверка правильного отображения выбранных услуг.

	Предусловия: 
		1) Перейти по ссылке http://2090000.ru/people/tariff/#p14e681

		2) Получить нужную строку параметров для тестирования

	Шаги:
		1) Переносим данные из строки параметров и заполняем параметры на сайте.

		2) Дожидаемся, пока сайт обновит меню "Выбранные услуги"

		3) Проверяем, совпадает ли обновленное меню с имеющийся строкой параметров.

	Ожидаемый результат:

		Элементы, отображенные в "Выбранных услугах", совпадают со строкой параметров.

Тест кейс #3: 
Проверка соответствия запроса и результата поиска.

	Предусловия: 
		1) Зайти на сайт rutor.org

		2) Кликнуть по кнопке "Поиск"

		3) Ввести в форму "Ищем" строку "Мстители"

		4) Сгенерировать искомый список для параметров поиска

	Шаги:
		1) Фиксируем из строку из таблицы и заполняем параметры на сайте.

		2) Дожидаемся, пока сайт обновит меню "Выбранные услуги"

		3) Проверяем, совпадает ли выданные результаты с параметрами, указанными в фиксированной строке. Если нет -- заносим строку в список с неправильным результатом.
		
		4) Переходим на следующую строку.

	Ожидаемый результат:

		На всех шагах тестирования элементы отсоритрованы в нужном порядке и выданы согласно запросу.


Exploratory Testing:
1.
	Это такая технология тестирования, совмещающая одновременное проектирование теста и его исполнение. Данный вид тестирования заранее не определяется в плане тестирования и такие тесты создаются, выполняются и модифицируются динамически, по мере необходимости. То есть, фактически это означает что тестировщик строит у себя в голове, если можно так сказать, модель ядра приложения и ищет в ней узкие места, либо какие-нибудь частные случаи в ее работе. И это позволяет ему менее зависеть от требований и каких-то меняющихся направлений развития продукта.

	Такая технология может планироваться к моменту, когда требования приняли гарантированно устойчивую форму. В общем, никакой вид тестирования не может совсем не зависеть от требований к продукту. Например, если в первоначальных требованиях нужно было рисовать квадратики, а потом предложили реализовать какую-нибудь функцию для вычисления преобразований Фурьте, то вряд ли зачем-то пригодятся предыдущие наработки по тестированию квадратиков. После "точки устоявшихся требований" технология будет наиболее эффектива. Это можно объяснить тем, что программисты при написании чего-либо стараются сделать наиболее общно, чтобы много не переписывать и не переделывать в случае немного изменившихся требований и ошибки после этой стадии будут важны при дальнейшем развитии, даже если конечные требования еще недостаточно разработаны.
	
	В случае неустоявшихся или не известных в деталях требований технику тоже можно применить: в этом случае результат одного кейса будет служить "отправной точкой" для другого. Тестировщик исследует функционал, попутно документируя найденные ошибки и принимая решение о том, в каком направлении продолжать тестирование. Такое тестирование можно делить на "сессии", ограниченные по времени и планировать заранее некоторый набор сессий

2.
	Наиболее эффективнее использовать данный вид тестирования для продуктов(моделей): имеющих плавающие требования, в период активного развития программы, при меняющейся цели следующего тестирования, зависящей от предыдущего; 
	
	Подробнее по каждому пункту:
	1) имеющих плавающие требования:
	Здесь я имел ввиду, что такой метод можно применять только при плавучих конечных требованиях. Если будут менять почти все, то вряд ли хоть какая-то техника будет эффективной. Есть пример с квадратом и Фурье.
	2) в период активного развития программы:
	Здесь, как я понимаю, продукт еще не до конца реализован. Но некоторые компоненты работают, поэтому если мы как-то найдем какие-то дефекты в них и исправим сразу же, то в будущем они помогут избежать ошибок. Привел пример про программистов. К томе же это позволяет одновременно накапливать базу знаний о программе (отчет можно использовать как документацию и как кейсы для следующих прогонов)
	3) при меняющейся цели следующего тестирования, зависящей от предыдущего:
	А здесь описывается сам процесс исследования. Наверное, здесь может быть проблематично описать баг, если он найден таким способом. Будет сложно вспомнить все шаги, которые делались.

	Либо для тестировщиков, обладающих обширными знаниями для построения тестов, формируемых на основе поведения тестируемого продукта в процессе проведения тестирования, степени знакомства с приложением, платформой, типами возможных сбоев и дефектов, рисками и т.п.

3.
	Из недостатков можно отметить, что результат зависит от знаний, опыта и навыков тестировщика. Также метод стоит сказать, что метод все же может пропустить некоторые недоработки, потому что не полностью покрывает всевозможные варианты использования продукта.

	Если требования изменятсья не будут и они достаточно простые, то не имеет смысл делать что-то сложное для тестирования, а можно просто проверить выполняются ли они в достаточной степени на момент выпуска продукта.







Тест кейс #1: 
Проверка корректности даты при вводе некорректного числа месяца.

	Предусловия: 
		1) Зайти на сайт http://astrodaily.ru/goroskop_personalny.php

		2) Снять галочку с чекбокса "известно"

	Шаги:
		1) В форме "Дата рождения:" ввести 31, Апрель, 2005.

		2) Кликнуть на кнопку Рассчитать.

	Ожидаемый результат:

		Сайт должен оповестить о возникшей ошибки, т.к. в апреле 30 дней.

Тест кейс #2: 
Проверка корректности обработки високосного года.

	Предусловия: 
		1) Зайти на сайт http://astrodaily.ru/goroskop_personalny.php

		2) Снять галочку с чекбокса "известно"

	Шаги:
		1) В форме "Дата рождения:" ввести 29, Февраль, 2008.

		2) Кликнуть на кнопку Рассчитать.

	Ожидаемый результат:

		Должна быть предоставлена информация по тематике сайта, ошибки быть не должно, потому что в високосного годе к февралю прибавляется еще 1 день.

Тест кейс #3: 
Проверка корректной обработки полей ввода

	Предусловия: 
		1) http://www.cadebou.pp.ru/ru/gb.php


	Шаги:
		1) В форме "Имя:" написать "><script>alert(/babah/)</script>

		2) остальные поля заполнить случайно.

	Ожидаемый результат:

		Корректная обработка введеней строки. Должены отсутстовать какие-либо признаки стороннего кода.









Exploratory Testing:

	Баг-репорт №1
		Короткое описание:
			Поля ввода ломают html страницы.
		Проект
			www.cadebou.pp.ru
		Номер версии
			(неизвестно)
		Важность
			S3 Значительная (Major)
		Приоритет
			(устанавливается менеджером)
		Статус
			Новая
		Автор
			Маринич Роман
		Назначен на
			(имя разработчика)
		Шаги воспроизведения
			1) Пройти по ссылке http://www.cadebou.pp.ru/ru/gb.php

			2) Снять галочку с чекбокса "известно"

			3) В форме "Имя:" написать "><script>alert(/babah/)</script>

			4) остальные поля заполнить случайно.

		Фактический результат
			Появилось выплывающее окно с надписью "/babah/".

		Ожидаемый результат: 
			Корректная обработка строки в виде ошибки, либо усечения строки. 

	Баг-репорт №2
		Короткое описание:
			Неправильная обработка високосного года.
		Проект
			astrodaily.ru
		Номер версии
			(неизвестно)
		Важность
			S4 Незначительная (Minor)
		Приоритет
			(устанавливается менеджером)
		Статус
			Новая
		Автор
			Маринич Роман
		Назначен на
			(имя разработчика)

		Шаги воспроизведения

			1) Зайти на сайт http://astrodaily.ru/goroskop_personalny.php

			2) Снять галочку с чекбокса "известно"

			1) В форме "Дата рождения:" ввести 29, Февраль, 2008.

			2) Кликнуть на кнопку Рассчитать.

		Фактический результат
			Выводится сообщение об ошибке, что в фервале всего 28 дней.

		Ожидаемый результат: 
			Должна быть предоставлена информация по тематике сайта, ошибки быть не должно, потому что в високосного годе к февралю прибавляется еще 1 день.


Pairwise Testing:

	Баг-репорт №1
		Короткое описание:
			Сортировка тем по убыванию не работает.
		Проект
			nnm-club.me
		Номер версии
			(неизвестно)
		Важность
			S4 Незначительная (Minor)
		Приоритет
			(устанавливается менеджером)
		Статус
			Новая
		Автор
			Маринич Роман
		Назначен на
			(имя разработчика)
		Шаги воспроизведения

			1) Перейти по ссылке http://nnm-club.me/forum/viewforum.php?f=561

			2) Заполнить форму поиска на форуме данными "3Месяца, ВремяРазмещ, Убыванию".

			3) Жмем кнопку "Перейти"

		Фактический результат
			Показаны темы за 3 месяца, отсортированные по времени размещения, но не по убыванию.
		Ожидаемый результат: 
			Нужные элементы показаны и отсортированы в нужном порядке.

	Баг-репорт №2
		Короткое описание:
			Дублирование 2 в 3 пункт в меню выбранных услуг.
		Проект
			2090000.ru
		Номер версии
			(неизвестно)
		Важность
			S3 Значительная (Major)
		Приоритет
			(устанавливается менеджером)
		Статус
			Новая
		Автор
			Маринич Роман
		Назначен на
			(имя разработчика)
		Шаги воспроизведения

			1) Перейти по ссылке http://2090000.ru/people/tariff/#p14e681

			2) Заполнить меню услуг данными "25мб, Amedia Premium HD, Покупка, В аренду, Не нажат, PrDrWeb".

			3) Дожидаемся, пока сайт обновит меню "Выбранные услуги"

		Фактический результат
			В выбранных услугах вместо набора
				25мб	Amedia Premium HD	Покупка	В аренду	Не нажат	PrDrWeb
			появляется набор:
				25мб	Amedia Premium HD	Amedia Premium HD	Не нажат	PrDrWeb

		Ожидаемый результат: 
			Элементы, отображенные в "Выбранных услугах", совпадают со строкой параметров.
